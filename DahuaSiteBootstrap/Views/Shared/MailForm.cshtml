@model DahuaSiteBootstrap.ViewModels.MailModel;


<form method="post" class="php-email-form" id="mailform1" data-aos="fade-up" data-aos-delay="200" asp-controller="Home" asp-action="SendMail">
    <div class="row gy-4">
        @Html.AntiForgeryToken()
        <div class="col-md-6">
            <input type="text" name="name" class="form-control" placeholder="Вашето име" asp-for="Name" required>
        </div>
        <div class="col-md-6 ">
            <input type="email" class="form-control" name="email" placeholder="Вашият имейл" asp-for="Email" required>
        </div>

        <div class="col-md-12">
            <input type="text" class="form-control" name="subject" placeholder="Предмет" required="" asp-for="Subject" required>
        </div>

        <div class="col-md-12">
            <textarea class="form-control" name="message" rows="6" placeholder="Съобщение" asp-for="Message"></textarea>
        </div>

        <div class="col-md-12 text-center" style="display:flex;flex-direction:column-reverse" id="result">
            <div class="loading">Loading</div>
            @if (TempData["Message"] != null)
            {
                <div class="@TempData["MessageType"]-message" style="">@TempData["Message"]</div>
            }

            <button type="submit">Send Message</button>
        </div>

    </div>
</form>
<script>
    document.getElementById("mailform1").addEventListener("submit", function (e) {
        e.preventDefault();
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
        submitContactForm(this, token);
    });

    async function submitContactForm(form, aftoken) {
        try {
            // Fix 2: Add loading state
            document.querySelector('.loading').style.display = 'block';

            const formData = new FormData(form);
            const response = await fetch(form.action, {
                method: form.method,
                body: formData,
                // Fix 3: Add anti-forgery token
                headers: {
                    'RequestVerificationToken': aftoken
                }
            });

            if (!response.ok) throw new Error('Network response was not ok');

            const result = await response.json();

            // Fix 4: Update UI with result
            document.querySelector('.loading').style.display = 'none';
            const resultDiv = document.querySelector('#result .error-message, #result .sent-message') ||
                document.createElement('div');
            resultDiv.className = 'sent-message';
            resultDiv.textContent = result.message;
            resultDiv.style.display = 'flex';
            document.getElementById('result').appendChild(resultDiv);

        } catch (error) {
            document.querySelector('.loading').style.display = 'none';
            const errorDiv = document.querySelector('#result .error-message') ||
                document.createElement('div');
            errorDiv.className = 'error-message';
            errorDiv.textContent = '';
            errorDiv.style.display = 'flex';
            document.getElementById('result').appendChild(errorDiv);
        }
    }
</script>
